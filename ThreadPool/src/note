1.hungrySingleton 饥饿式单例
2.lazySingleton  饱汉式单例
3.innerSingleton 匿名内部类单例
4.线程安全包括：可见性和原子性，volatile能保证可见性，但不能保证原子性。synchornized二者都可以保证。
5.JAVA线程里有2种线程，一种是守护线程，一种是用户线程。
  比如垃圾回收线程就是守护线程，当不存在非守护线程了。守护线程自动销毁。
6.suspend,resume 暂停和恢复线程。
7.yield方法让当前线程，放弃CPU资源。让其他任务去占用CPU，但是不保证放弃后又立马获得CPU资源。
8.停止线程：不建议用Thread.stop()方法。不安全并且已废弃。
      用Thread.interrupt();这个方法不会终止一个正在运行的方法。
  mythread.interrupted();判断当前线程是否中断。 这里即使是子线程调用。实际判断的是MAIN线程
      另Thread.interrupted();连续调用两次，第二次将返回false;因为这个方法可以清除状态。
  mythread.isInterrupted();连续调用2次，都是true;判断调用线程，并且不清楚状态。
9.中断线程，退出FOR循环，后面的语句还是会执行的。
10.在sleep状态终止，会进入异常，并清除状态。
11.isAlive()判断线程是否存活状态
12.wait()执行后，锁自动释放，但notify()执行后，锁不自动释放。
13.wait状态，调用interrupt()方法会报异常.
14.notify()一次只随机通知一个线程进行唤醒。notify()可以多次调用，但是推荐使用notifyAll();
15.wait(long time);可以定义一个参数，超过时间自动唤醒。








